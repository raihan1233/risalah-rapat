openapi: 3.0.3
info:
  title: Swagger Risalah - OpenAPI 3.0
  description: |
    Dokumentasi risalah rapat
  version: 1.0.11
tags:
  - name: Modul Login
  - name: Modul Home
  - name: Modul Buat Risalah
  - name: Modul Daftar Risalah
  - name: Modul Detail Risalah
  - name: Modul Tempat
  - name: Modul Template
  - name: Modul User
  - name: Modul Revisi
paths:
  /auth:
    post:
      tags:
        - Modul Login
      summary: verifikasi user
      description: digunakan untuk memvalidasi username & password user
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/xml:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Auth'
        '405':
          description: Invalid input

    get: # GET method for retrieving user data
      tags:
        - Modul Login
      summary: Get user information
      description: Retrieve user information by username
      operationId: getUserInfo
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put: # PUT method for updating user data
      tags:
        - Modul Login
      summary: Update user information
      description: Update user information by username
      operationId: updateUser
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the user to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    delete: # DELETE method for deleting a user
      tags:
        - Modul Login
      summary: Delete user
      description: Delete user by username
      operationId: deleteUser
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /form-risalah:
    post:
      tags:
        - Modul Buat Risalah
      summary: membuat form 
      description: digunakan untuk membuat form risalah
      operationId: form buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRisalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/FormRisalah'
        required: true
      responses:
        '200':
          description: Risalah successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRisalah'          
            application/xml:
              schema:
                $ref: '#/components/schemas/FormRisalah'
        '405':
          description: Invalid input

    get: # GET method for retrieving form risalah data
      tags:
        - Modul Buat Risalah
      summary: Get form risalah information
      description: Retrieve form risalah information by ID
      operationId: getFormRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the form risalah to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Form risalah information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRisalah'
        '404':
          description: Form risalah not found

    put: # PUT method for updating form risalah data
      tags:
        - Modul Buat Risalah
      summary: Update form risalah
      description: Update form risalah by ID
      operationId: updateFormRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the form risalah to update
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRisalah'
        required: true
      responses:
        '200':
          description: Form risalah updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRisalah'
        '404':
          description: Form risalah not found

    delete: # DELETE method for deleting a form risalah
      tags:
        - Modul Buat Risalah
      summary: Delete form risalah
      description: Delete form risalah by ID
      operationId: deleteFormRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the form risalah to delete
          schema:
            type: integer
      responses:
        '204':
          description: Form risalah deleted successfully
        '404':
          description: Form risalah not found

  /tracker:
    post:
      tags:
        - Modul Buat Risalah
      summary: membuat urutan tracker
      description: digunakan untuk membuat tracker risalah
      operationId: tracker buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerRisalah'
        '405':
          description: Invalid input

    get: # GET method for retrieving tracker risalah data
      tags:
        - Modul Buat Risalah
      summary: Get tracker risalah information
      description: Retrieve tracker risalah information by ID
      operationId: getTrackerRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the tracker risalah to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Tracker risalah information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerRisalah'
        '404':
          description: Tracker risalah not found

    put: # PUT method for updating tracker risalah data
      tags:
        - Modul Buat Risalah
      summary: Update tracker risalah
      description: Update tracker risalah by ID
      operationId: updateTrackerRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the tracker risalah to update
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
        required: true
      responses:
        '200':
          description: Tracker risalah updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerRisalah'
        '404':
          description: Tracker risalah not found

    delete: # DELETE method for deleting a tracker risalah
      tags:
        - Modul Buat Risalah
      summary: Delete tracker risalah
      description: Delete tracker risalah by ID
      operationId: deleteTrackerRisalah
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the tracker risalah to delete
          schema:
            type: integer
      responses:
        '204':
          description: Tracker risalah deleted successfully
        '404':
          description: Tracker risalah not found

  /dokumen_relasi:
    post:
      tags:
        - Modul Buat Risalah
      summary: menambahkan dokumen relasi (opsional)
      description: digunakan untuk menambahkan dokumen relasi risalah
      operationId: dokumen relasi buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
          application/xml:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenRelasi'
        '405':
          description: Invalid input

    get: # GET method for retrieving dokumen relasi data
      tags:
        - Modul Buat Risalah
      summary: Get dokumen relasi information
      description: Retrieve dokumen relasi information by ID
      operationId: getDokumenRelasi
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the dokumen relasi to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Dokumen relasi information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenRelasi'
        '404':
          description: Dokumen relasi not found

    put: # PUT method for updating dokumen relasi data
      tags:
        - Modul Buat Risalah
      summary: Update dokumen relasi
      description: Update dokumen relasi by ID
      operationId: updateDokumenRelasi
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the dokumen relasi to update
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
        required: true
      responses:
        '200':
          description: Dokumen relasi updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenRelasi'
        '404':
          description: Dokumen relasi not found

    delete: # DELETE method for deleting a dokumen relasi
      tags:
        - Modul Buat Risalah
      summary: Delete dokumen relasi
      description: Delete dokumen relasi by ID
      operationId: deleteDokumenRelasi
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the dokumen relasi to delete
          schema:
            type: integer
      responses:
        '204':
          description: Dokumen relasi deleted successfully
        '404':
          description: Dokumen relasi not found

  /risalah:
    post:
      tags:
        - Modul Buat Risalah
      summary: menggabungkan tabel form risalah, tracker dan dokumen relasi (join)
      description: digunakan untuk membuat risalah
      operationId: risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/Risalah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Risalah'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
        '405':
          description: Invalid input

    get: # GET method for retrieving risalah data
      tags:
        - Modul Buat Risalah
        - Modul Daftar Risalah
        - Modul Home
      summary: Mendapatkan risalah
      description: Mengambil risalah dengan status yang belum approve
      operationId: getRisalah
      responses:
        '200':
          description: Risalah berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Risalah'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

  /risalah/{id}:
    get:
      tags:
        - Modul Detail Risalah
      summary: Mendapatkan detail risalah
      description: Mengambil detail risalah berdasarkan ID
      operationId: getDetailRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Detail risalah berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
            application/xml:
              schema:
                $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

    put: # PUT method for updating risalah data
      tags:
        - Modul Detail Risalah
      summary: Update risalah
      description: Update risalah by ID
      operationId: updateRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risalah'
        required: true
      responses:
        '200':
          description: Risalah berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

    delete: # DELETE method for deleting a risalah
      tags:
        - Modul Detail Risalah
      summary: Delete risalah
      description: Delete risalah by ID
      operationId: deleteRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: Risalah berhasil dihapus
        '404':
          description: Risalah tidak ditemukan

  /place:
    post:
      tags:
        - Modul Tempat
      summary: menambahkan tempat
      description: menambahkan tempat untuk risalah
      operationId: place
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
          application/xml:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      responses:
        '200':
          description: Place Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Place'
        '405':
          description: Invalid input

    get: # GET method for retrieving place data
      tags:
        - Modul Tempat
      summary: Get place information
      description: Retrieve place information by ID
      operationId: getPlace
      parameters:
        - name: id
          in: query
          required: true
          description: ID tempat yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Place information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '404':
          description: Place not found

    put: # PUT method for updating place data
      tags:
        - Modul Tempat
      summary: Update place
      description: Update place by ID
      operationId: updatePlace
      parameters:
        - name: id
          in: query
          required: true
          description: ID tempat yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      responses:
        '200':
          description: Place updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '404':
          description: Place not found

    delete: # DELETE method for deleting a place
      tags:
        - Modul Tempat
      summary: Delete place
      description: Delete place by ID
      operationId: deletePlace
      parameters:
        - name: id
          in: query
          required: true
          description: ID tempat yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: Place deleted successfully
        '404':
          description: Place not found

  /template:
    post:
      tags:
        - Modul Template
      summary: menambahkan template
      description: menambahkan template untuk risalah
      operationId: template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        '200':
          description: Template Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Template'
        '405':
          description: Invalid input

    get: # GET method for retrieving template data
      tags:
        - Modul Template
      summary: Get template information
      description: Retrieve template information by ID
      operationId: getTemplate
      parameters:
        - name: id
          in: query
          required: true
          description: ID template yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Template information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Template not found

    put: # PUT method for updating template data
      tags:
        - Modul Template
      summary: Update template
      description: Update template by ID
      operationId: updateTemplate
      parameters:
        - name: id
          in: query
          required: true
          description: ID template yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        '200':
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Template not found

    delete: # DELETE method for deleting a template
      tags:
        - Modul Template
      summary: Delete template
      description: Delete template by ID
      operationId: deleteTemplate
      parameters:
        - name: id
          in: query
          required: true
          description: ID template yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: Template deleted successfully
        '404':
          description: Template not found

  /user:
    post:
      tags:
        - Modul User
      summary: menambahkan user
      description: menambahkan user baru
      operationId: createUser  # Unique operationId for the POST operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input

    get:
      tags:
        - Modul User
      summary: Get user information
      description: Retrieve user information by ID
      operationId: getUser  # Unique operationId for the GET operation
      parameters:
        - name: id
          in: query
          required: true
          description: ID user yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      tags:
        - Modul User
      summary: Update user
      description: Update user by ID
      operationId: updateUserByID  # Unique operationId for the PUT operation
      parameters:
        - name: id
          in: query
          required: true
          description: ID user yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    delete:
      tags:
        - Modul User
      summary: Delete user
      description: Delete user by ID
      operationId: deleteUserByID  # Unique operationId for the DELETE operation
      parameters:
        - name: id
          in: query
          required: true
          description: ID user yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /revisi:
    post:
      tags:
        - Modul Revisi
      summary: menambahkan revisi
      description: menambahkan revisi untuk risalah
      operationId: revisi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revisi'
          application/xml:
            schema:
              $ref: '#/components/schemas/Revisi'
        required: true
      responses:
        '200':
          description: Revisi Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revisi'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Revisi'
        '405':
          description: Invalid input

    get: # GET method for retrieving revisi data
      tags:
        - Modul Revisi
      summary: Get revisi information
      description: Retrieve revisi information by ID
      operationId: getRevisi
      parameters:
        - name: id
          in: query
          required: true
          description: ID revisi yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Revisi information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revisi'
        '404':
          description: Revisi not found

    put: # PUT method for updating revisi data
      tags:
        - Modul Revisi
      summary: Update revisi
      description: Update revisi by ID
      operationId: updateRevisi
      parameters:
        - name: id
          in: query
          required: true
          description: ID revisi yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revisi'
        required: true
      responses:
        '200':
          description: Revisi updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revisi'
        '404':
          description: Revisi not found

    delete: # DELETE method for deleting a revisi
      tags:
        - Modul Revisi
      summary: Delete revisi
      description: Delete revisi by ID
      operationId: deleteRevisi
      parameters:
        - name: id
          in: query
          required: true
          description: ID revisi yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: Revisi deleted successfully
        '404':
          description: Revisi not found

components:
  schemas:
    Auth:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        name:
          type: string

    FormRisalah:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string

    TrackerRisalah:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
        date:
          type: string

    DokumenRelasi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string

    Risalah:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
        date:
          type: string
        form_id:
          type: integer
        tracker_id:
          type: integer
        dokumen_relasi_id:
          type: integer

    Place:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string

    Template:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        content:
          type: string

    Revisi:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
