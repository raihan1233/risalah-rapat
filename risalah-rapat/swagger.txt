openapi: 3.0.3
info:
  title: Swagger Risalah - OpenAPI 3.0
  description: |
    Dokumentasi risalah rapat
  version: 1.0.11
tags:
  - name: Modul Login
  - name: Modul Home
  - name: Modul Buat Risalah
  - name: Modul Daftar Risalah
  - name: Modul Detail Risalah
  - name: Modul Tempat
  - name: Modul Template
  - name: Modul User
  - name: Modul Revisi
  - name: Modul Profile
  - name: Modul Notification
paths:
  /auth:
    post:
      tags:
        - Modul Login
      summary: verifikasi user
      description: digunakan untuk memvalidasi username & password user
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/xml:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Auth'
        '405':
          description: Invalid input

    get: # GET method for retrieving user data
      tags:
        - Modul Login
      summary: Get user information
      description: Retrieve user information by username
      operationId: getUserInfo
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /form-risalah:
    post:
      tags:
        - Modul Buat Risalah
      summary: membuat form 
      description: digunakan untuk membuat form risalah
      operationId: form buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRisalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/FormRisalah'
        required: true
      responses:
        '200':
          description: Risalah successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRisalah'          
            application/xml:
              schema:
                $ref: '#/components/schemas/FormRisalah'
        '405':
          description: Invalid input
  /tracker:
    post:
      tags:
        - Modul Buat Risalah
      summary: membuat urutan tracker
      description: digunakan untuk membuat tracker risalah
      operationId: tracker buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackerRisalah'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerRisalah'
        '405':
          description: Invalid input

  /dokumen_relasi:
    post:
      tags:
        - Modul Buat Risalah
      summary: menambahkan dokumen relasi (opsional)
      description: digunakan untuk menambahkan dokumen relasi risalah
      operationId: dokumen relasi buat risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
          application/xml:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DokumenRelasi'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenRelasi'
        '405':
          description: Invalid input

  /risalah:
    post:
      tags:
        - Modul Buat Risalah
      summary: menggabungkan tabel form risalah, tracker dan dokumen relasi (join)
      description: digunakan untuk membuat risalah
      operationId: risalah
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risalah'
          application/xml:
            schema:
              $ref: '#/components/schemas/Risalah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Risalah'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
        '405':
          description: Invalid input

    get: # GET method for retrieving risalah data
      tags:
        # - Modul Buat Risalah
        - Modul Daftar Risalah
        - Modul Home
      summary: Mendapatkan risalah
      description: Mengambil risalah dengan status yang belum approve
      operationId: getRisalah
      responses:
        '200':
          description: Risalah berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Risalah'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

  /risalah/{id}:
    get:
      tags:
        - Modul Detail Risalah
      summary: Mendapatkan detail risalah
      description: Mengambil detail risalah berdasarkan ID
      operationId: getDetailRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Detail risalah berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
            application/xml:
              schema:
                $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

    put: # PUT method for updating risalah data
      tags:
        - Modul Detail Risalah
      summary: Update risalah
      description: Update risalah by ID
      operationId: updateRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risalah'
        required: true
      responses:
        '200':
          description: Risalah berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risalah'
        '404':
          description: Risalah tidak ditemukan

    delete: # DELETE method for deleting a risalah
      tags:
        - Modul Detail Risalah
      summary: Delete risalah
      description: Delete risalah by ID
      operationId: deleteRisalah
      parameters:
        - name: id
          in: path
          required: true
          description: ID risalah yang akan dihapus
          schema:
            type: integer
      responses:
        '204':
          description: Risalah berhasil dihapus
        '404':
          description: Risalah tidak ditemukan

  /add_place:
    post:
      tags:
        - Modul Tempat
      summary: menambahkan tempat
      description: menambahkan data tempat di halaman master tempat
      operationId: AddPlace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPlacebyID'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetPlacebyID'
        required: true
      responses:
        '200':
          description: Data tempat berhasil ditambahkan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlacebyID'          
            application/xml:
              schema:
                $ref: '#/components/schemas/GetPlacebyID'
        '405':
          description: Invalid input

  /get_place?id_place:
    get: # GET method for retrieving place data
      tags:
        - Modul Tempat
      summary: Get place based on ID
      description: http://localhost:3000/_QUERIES/places/get_place?id_place=value
      operationId: getPlaceByID
      parameters:
        - name: id
          in: query
          required: true
          description: ID tempat yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Place information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlacebyID'
        '404':
          description: Place not found
          
  /get_places:
    get: # GET method for retrieving place data
      tags:
        - Modul Tempat
      summary: Get all data place 
      description: http://localhost:3000/_QUERIES/places/get_places?_page=value&_page_size=value
      operationId: getAllPlace
      responses:
        '200':
          description: Place information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlace'
        '404':
          description: Place not found

  /patch_place:
    put: # PUT method for updating place data
      tags:
        - Modul Tempat
      summary: Update place by ID
      description: http://localhost:3000/_QUERIES/places/patch_place?id_place=value&nama=value&status=value&modified_by=value
      operationId: updatePlace
      parameters:
        - name: id
          in: query
          required: true
          description: ID tempat yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPlacebyID'
        required: true
      responses:
        '200':
          description: Place updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlacebyID'
        '404':
          description: Place not found

    # delete: # DELETE method for deleting a place
    #   tags:
    #     - Modul Tempat
    #   summary: Delete place
    #   description: Delete place by ID
    #   operationId: deletePlace
    #   parameters:
    #     - name: id
    #       in: query
    #       required: true
    #       description: ID tempat yang akan dihapus
    #       schema:
    #         type: integer
    #   responses:
    #     '204':
    #       description: Place deleted successfully
    #     '404':
    #       description: Place not found

  /template:
    post:
      tags:
        - Modul Template
      summary: menambahkan template
      description: menambahkan template untuk risalah
      operationId: template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        '200':
          description: Template Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Template'
        '405':
          description: Invalid input

    get: # GET method for retrieving template data
      tags:
        - Modul Template
      summary: Get template information
      description: Retrieve template information by ID
      operationId: getTemplate
      parameters:
        - name: id
          in: query
          required: true
          description: ID template yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Template information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Template not found

    put: # PUT method for updating template data
      tags:
        - Modul Template
      summary: Update template
      description: Update template by ID
      operationId: updateTemplate
      parameters:
        - name: id
          in: query
          required: true
          description: ID template yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        '200':
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Template not found

    # delete: # DELETE method for deleting a template
    #   tags:
    #     - Modul Template
    #   summary: Delete template
    #   description: Delete template by ID
    #   operationId: deleteTemplate
    #   parameters:
    #     - name: id
    #       in: query
    #       required: true
    #       description: ID template yang akan dihapus
    #       schema:
    #         type: integer
    #   responses:
    #     '204':
    #       description: Template deleted successfully
    #     '404':
    #       description: Template not found

  /user:
    post:
      tags:
        - Modul User
      summary: menambahkan user
      description: menambahkan user baru
      operationId: createUser  # Unique operationId for the POST operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input

    get:
      tags:
        - Modul User
      summary: Get user information
      description: Retrieve user information by ID
      operationId: getUser  # Unique operationId for the GET operation
      parameters:
        - name: id
          in: query
          required: true
          description: ID user yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      tags:
        - Modul User
      summary: Update user
      description: Update user by ID
      operationId: updateUserByID  # Unique operationId for the PUT operation
      parameters:
        - name: id
          in: query
          required: true
          description: ID user yang akan diupdate
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    # delete:
    #   tags:
    #     - Modul User
    #   summary: Delete user
    #   description: Delete user by ID
    #   operationId: deleteUserByID  # Unique operationId for the DELETE operation
    #   parameters:
    #     - name: id
    #       in: query
    #       required: true
    #       description: ID user yang akan dihapus
    #       schema:
    #         type: integer
    #   responses:
    #     '204':
    #       description: User deleted successfully
    #     '404':
    #       description: User not found

  /revisi:
    post:
      tags:
        - Modul Revisi
      summary: menambahkan revisi
      description: menambahkan revisi untuk risalah
      operationId: revisi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revisi'
          application/xml:
            schema:
              $ref: '#/components/schemas/Revisi'
        required: true
      responses:
        '200':
          description: Revisi Added Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revisi'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Revisi'
        '405':
          description: Invalid input

    get: # GET method for retrieving revisi data
      tags:
        - Modul Revisi
      summary: Get revisi information
      description: Retrieve revisi information by ID
      operationId: getRevisi
      parameters:
        - name: id
          in: query
          required: true
          description: ID revisi yang akan diambil
          schema:
            type: integer
      responses:
        '200':
          description: Revisi information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revisi'
        '404':
          description: Revisi not found

    # put: # PUT method for updating revisi data
    #   tags:
    #     - Modul Revisi
    #   summary: Update revisi
    #   description: Update revisi by ID
    #   operationId: updateRevisi
    #   parameters:
    #     - name: id
    #       in: query
    #       required: true
    #       description: ID revisi yang akan diupdate
    #       schema:
    #         type: integer
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Revisi'
    #     required: true
    #   responses:
    #     '200':
    #       description: Revisi updated successfully
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Revisi'
    #     '404':
    #       description: Revisi not found

    # delete: # DELETE method for deleting a revisi
    #   tags:
    #     - Modul Revisi
    #   summary: Delete revisi
    #   description: Delete revisi by ID
    #   operationId: deleteRevisi
    #   parameters:
    #     - name: id
    #       in: query
    #       required: true
    #       description: ID revisi yang akan dihapus
    #       schema:
    #         type: integer
    #   responses:
    #     '204':
    #       description: Revisi deleted successfully
    #     '404':
    #       description: Revisi not found
  
  /profile:
    post:
      tags:
        - Modul Profile
      summary: Create user profile
      description: Create a new user profile
      operationId: createProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          description: User profile created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request - Invalid input
  
    put:
      tags:
        - Modul Profile
      summary: Update user profile
      description: Update user profile information
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request - Invalid input
        '404':
          description: User not found
  
    # delete:
    #   tags:
    #     - Modul Profile
    #   summary: Delete user profile
    #   description: Delete user profile information
    #   operationId: deleteProfile
    #   responses:
    #     '204':
    #       description: User profile deleted successfully
    #     '404':
    #       description: User not found

  /notification:
    post:
      tags:
        - Modul Notification
      summary: Create a new notification
      description: Create a new notification
      operationId: createNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '201':
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Bad Request - Invalid input
    
    get:
      tags:
        - Modul Notification
      summary: Get notifications
      description: Retrieve a list of notifications
      operationId: getNotifications
      responses:
        '200':
          description: List of notifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  
components:
  schemas:
    Auth:
      type: object
      properties:
        username:
          type: string
          description: username yang diambil dari master user
          example: raihan
        password:
          type: string
          description: password yang diambil dari master user
          example: raihan12345
    User:
      type: object
      properties:
        id:
          type: integer
          description: id pengguna
          example: 1
        name:
          type: string
          description: nama lengkap pengguna
          example: Raihan Dwi Win Cahya
        username:
          type: string
          description: username pengguna
          example: raihan
        jabatan:
          type: string
          description: jabatan user
          example: pegawai IT
        password:
          type: string
          description: password user
          example: raihan123
        role: 
          type: string
          description: status role user
          example: user
        status:
          type: string
          description: status user 
          example: aktif
        created_by:
          type: integer
          description: id user yang melakukan penambahan
          example: 3
        modified_by:
          type: integer
          description: id user yang melakukan perubahan
          example: 5
        created_date:
          type: integer
          description: tanggal melakukan penambahan
          example: 2023-11-13 13.00
        modified_date:
          type: integer
          description: tanggal melakukan perubahan
          example: 2023-11-17 15.00
        token:
          type: integer
          description: token pengguna
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6NSwibWV0YWRhdGEiOm51bGwsIm5hbWUiOiJhbm5pc2EiLCJ1c2VybmFtZSI6ImFubmlzYSJ9LCJleHAiOjE3MDE2NzY4OTUsIm5iZiI6MTcwMTY1NTI5NX0.5Iodn_tEteR1AHiHmmaqJc0QXnRxunjIpRa3qs7lAY0
        tipe: 
          type: string
          description: tipe pengguna
          example: internal
    FormRisalah:
      type: object
      properties:
        perihal:
          type: string
          description: perihal risalah
          example: penjualan kapal
        periode_risalah:
          type: string
          description: tanggal risalah
          example: 01/10/2023 14.00 - 01/10/2023 16.00
        pilih_tempat:
          type: string
          description: tempat risalah
          example: ruang lambelu
        pilih_template:
          type: string
          description: template risalah
          example: template-1
        agenda:
          type: array
          items:
            type: string
            example: ['penjadwalan', 'penjualan', 'pembelian']
        download:
          type: string
          description: link download template
          example: penjadwalan.docx
        upload_template:
          type: string
          description: upload template yang telah diperbaiki
          example: penjadwalan.pdf
          
    TrackerItem:
      type: object
      properties:
        user_internal:
          type: string
        user_eksternal:
          type: string
        nama_jabatan:
          type: string
        role:
          type: string

    TrackerRisalah:
      type: array
      items:
        $ref: '#/components/schemas/TrackerItem'
      example:
        - user_internal: "Mbak Rere"
          user_eksternal: ""
          nama_jabatan: "Sekretaris"
          role: "drafter"
        - user_internal: ""
          user_eksternal: "Mr. Smith"
          nama_jabatan: "Manager"
          role: "approver"

    DokumenRelasi:
      type: object
      properties:
        unggah_lampiran:
          type: string
          description: file risalah pendukung
          example: penjualan.pdf
        nama_lampiran:
          type: string
          description: nama lampiran file pendukung
          example: penjualan
          
    Risalah:
      type: object
      properties:
        id:
          type: integer
        form_risalah:
          $ref: '#/components/schemas/FormRisalah'
        tracker_risalah:
          $ref: '#/components/schemas/TrackerRisalah'
        dokumen_relasi:
          $ref: '#/components/schemas/DokumenRelasi'

    GetPlacebyID:
      type: object
      properties:
        id_place:
          type: integer
          description: id tempat
          example: 1
        nama:
          type: string
          description: nama tempat yang akan digunakan
          example: ruang lambelu
        status:
          type: string
          description: status ruangan aktif / tidak aktif
          example: aktif
        created_by:
          type: integer
          description: id user yang melakukan penambahan
          example: 1
        modified_by:
          type: integer
          description: id user yang melakukan perubahan
          example: null
        created_date:
          type: integer
          description: tanggal melakukan penambahan
          example: 2023-11-13 13.00
        modified_date:
          type: integer
          description: tanggal melakukan perubahan
          example: null
    PlaceItems:
      type: object
      properties:
        id_place:
          type: integer
        nama:
          type: string
        status:
          type: string
        created_by:
          type: integer
        modified_by:
          type: integer
        created_date:
          type: integer
        modified_date:
          type: integer
    GetPlace:
      type: array
      items: 
        $ref: '#/components/schemas/PlaceItems'
      example:
        - id_place: 1
          nama: ruang lambelu
          status: aktif
          created_by: 1
          modified_by: null
          created_date: 2023-11-13 13.00
          modified_date: null
        - id_place: 2
          nama: ruang kelud
          status: aktif
          created_by: 1
          modified_by: 3
          created_date: 2023-11-13 13.00
          modified_date: 2023-11-15 14.00
        - id_place: 3
          nama: ruang kelaud
          status: aktif
          created_by: 1
          modified_by: 3
          created_date: 2023-12-13 13.00
          modified_date: 2023-12-14 14.00
        - id_place: 4
          nama: ruang tambora
          status: aktif
          created_by: 3
          modified_by: 3
          created_date: 2023-11-13 13.00
          modified_date: 2023-11-13 14.00
    Template:
      type: object
      properties:
        id_template:
          type: integer
          description: id template
          example: 1
        nama_template:
          type: string
          description: nama template yang akan digunakan
          example: template 1
        file:
          type: string
          description: file template yang akan digunakan
          example: template-1.docx
        status:
          type: string
          description: status template
          example: aktif
        created_by:
          type: integer
          description: id user yang melakukan penambahan
          example: 3
        modified_by:
          type: integer
          description: id user yang melakukan perubahan
          example: 5
        created_date:
          type: integer
          description: tanggal melakukan penambahan
          example: 2023-11-13 13.00
        modified_date:
          type: integer
          description: tanggal melakukan perubahan
          example: 2023-11-17 15.00
    Profile:
      type: object
      properties: 
        password_lama: 
          type: string
          description: password lama pengguna
          example: raihan123
        password_baru: 
          type: string
          description: password baru pengguna
          example: raihan12345
        konfirmasi_password: 
          type: string
          description: konfirmasi password pengguna
          example: raihan12345

    Revisi:
      type: object
      properties:
        id:
          type: integer
        nama_lengkap:
          type: string
          description: nama lengkap user yang diambil dari master user
          example: Raihan Dwi Win Cahya
        jabatan:
          type: string
          description: jabatan user yang diambil dari master user
          example: pegawai TI
        konten: 
          type: string
          description: konten revisi 
          example: kurang panjang
        waktu_revisi:
          type: string
          description: waktu revisi ketika revisi dibuat
          example: 01/20/2023 15.00
    
    Notification:
      type: object
      properties:
        id: 
          type: integer
        message:
          type: string
          description: notifikasi yang akan tampil
          example: notif baru niii
        status:
          type: string
          description: status notifikasi sudah dibaca atau belum dibaca
          example: sudah dibaca
          
          
          
